// Code generated by go-bindata.
// sources:
// ..\..\data\Basehead.obj
// DO NOT EDIT!

package data

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _baseheadObj = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x59\xdb\xae\x5d\xc9\x6d\x7c\xd7\x57\x2c\xc0\x0f\x4e\x1e\xfa\xa8\xc9\xbe\xfb\xd1\x09\x9c\x38\x80\x91\xfc\x41\x20\x79\x8e\x62\x01\x9a\x28\xd1\x65\x26\xce\xd7\xa7\xaa\xd8\x5b\xb2\x4e\x80\x5e\x63\x18\xda\xab\x2f\x6c\x36\x59\x2c\xb2\x79\x7e\x73\xfd\xfe\xc3\xf3\x7f\xfe\xf4\xfc\xe9\xfa\xc5\x9f\xfa\xba\xfe\xee\xf3\xd7\xb7\x57\xfe\xfb\xeb\x5f\x7f\xff\x2f\xd7\x1f\xde\x7f\x78\xfe\xdd\xf5\xdb\xdf\xbf\xf9\xfc\xfc\x97\xe7\x37\x3f\x3d\xbd\xe5\xca\xdf\xbe\xfa\xcd\xf5\xeb\xaf\xbf\xc6\xc7\xf3\xa7\xa7\x8f\x9f\xfe\x03\x23\x7f\x7a\xf3\xd3\xf3\xf5\xf6\xaf\x0f\x61\xff\xf4\xf5\xaf\xff\x7b\xfd\xe5\xcb\x97\xff\xfa\xfc\xbb\xd7\xaf\xb9\xfa\xcb\xd7\x4f\x6f\x3f\x7e\xfe\xef\xaf\xef\x7f\x7a\xfa\xf3\xc7\x9f\x5f\xff\xe1\xeb\x87\x0f\xff\xf6\xe9\xf9\x97\xf7\xcf\xbf\xbe\xfe\x23\x36\xfc\xcf\xd3\x9f\xdf\xfd\xfc\xfa\x8f\xff\xf8\x7a\xe6\xd6\xbb\xbd\xfa\xf9\xcb\x87\x0f\xef\xdf\x5e\xdf\x4e\xc6\xf7\xab\x8f\xd7\x3f\xe3\xe7\xbf\xff\xc3\xd7\xb7\xcf\xaf\x7e\xb9\xf2\xd3\x58\x75\xce\x7c\xa5\xfc\x54\x5b\x77\x9b\x57\x32\xfc\x2a\xb6\x4c\xd3\xbd\x98\x8d\xc5\xe9\x56\x6b\x1d\xe3\xb2\x27\xab\xab\xd7\x81\x59\xfc\x2c\x73\x0d\xd3\xe6\x4a\x41\xfc\x35\xd6\x98\x7d\x69\x3a\xaf\x5a\xbd\x86\xec\xec\x3d\x43\x5e\xb5\xde\xd7\x94\xe8\x5a\x56\x99\x23\x66\xab\x97\xc2\x93\x7b\xae\xb3\x15\x4d\xfb\x18\xe6\x1e\x27\x5b\xa9\x1d\xf2\xda\x2a\xee\xb1\x79\x75\x6f\xb5\x68\xf3\xea\x03\x27\xe7\xa7\x99\x7d\xf6\x1e\x07\x17\xeb\x53\xda\xd4\x92\x7b\x76\x8a\xc6\x48\xb6\x1a\x77\xce\xa3\xf0\x52\xfe\x94\x27\x6e\x65\x3a\xb9\x36\xfc\xa7\xe9\x59\x56\xa3\xda\xfe\x34\x7d\xf9\x68\x94\xe3\xb9\xd7\x19\xb7\x2a\x6b\x74\x6b\x9c\xf6\xd2\x69\x12\x4c\xc3\x72\xa5\xfb\xbe\x56\xf5\x3c\x39\xbd\x30\x1f\x5a\x18\xae\x37\x73\xa8\xd6\xf2\xc8\x8b\x27\xe2\x0a\x7d\x74\xd9\xbb\x5b\xae\x4d\xd3\xbe\x4a\x6d\x26\xd5\xaa\x35\xd3\x74\x9e\xa3\xf5\x19\xd3\x05\xbf\x32\xa7\xbb\x15\x9f\xb2\x6d\xc9\xf5\x61\x95\x52\xb3\x2f\x4d\x1b\x2e\xbe\x1a\x77\x8f\x36\xe7\xa8\xe1\x2e\x6b\xcb\xa5\x9a\xad\x9a\x29\xc7\x9e\x26\x0e\x71\xd7\xf4\xac\x0d\xc3\x9a\x6e\x63\x54\x39\xc4\x69\xe7\x15\x50\xb0\x21\xcd\x71\xef\x8e\x2b\x4a\xb5\xd5\xf8\x0b\xd3\xd0\xd7\xf2\x08\xab\x95\xba\x64\x01\x18\xda\x7a\xeb\x25\x34\xcf\xd9\x0c\x22\xcb\x53\xc6\x7d\xaa\x10\xe7\xe6\x73\xc5\xc5\x1a\xce\xf3\xed\x92\x0c\x13\xca\x25\xd3\xe1\x1d\x9d\xdd\x46\x6e\x34\x65\xc1\x1d\x6c\x65\xd9\x3c\xc3\x49\x66\xda\x0d\x79\x25\x34\x1f\xd0\x37\x5c\x02\x37\xd8\x08\x87\x02\xba\x36\x25\x12\x00\x87\x9e\xfc\x05\x84\xf4\x9a\x03\x0e\xb3\xcd\x5e\x2e\xb9\xc9\x5d\x60\xa9\x0b\x5e\x2e\x8f\x08\x18\xd8\x8c\xf3\x70\x17\x5b\x34\x63\xb6\xd1\xd7\x43\xf2\x68\xf2\x66\x01\xa4\x5a\xbd\xe4\xad\x3c\xc3\xa0\x38\x1f\x90\x93\xe0\x45\x04\x43\xab\xd9\x96\x59\x38\x6b\xe2\x57\xd1\x69\xa5\x4e\x43\x18\xe1\x88\xb2\xac\x46\xe0\xcd\x3e\x57\x1d\xd2\x79\x65\x8b\x28\x1a\xb9\xe6\xda\x77\xe4\xad\xb9\x16\xb7\x4c\xf3\xce\x1f\x65\xc2\xe5\x7b\x6f\x19\x7d\x6a\xaf\x00\x4a\x0d\x10\xdc\x88\xcb\x1d\xf1\xc5\x8b\x5d\x82\x5d\x29\x3d\x4c\x69\xb5\x05\x7c\x07\x80\xac\x7b\x00\xb1\x3b\xc2\x26\x06\x4a\xdc\x77\x00\x0f\x95\x36\x28\xa3\x9a\xb7\x38\xf6\x21\xb8\xe6\x05\x7f\x0b\x54\x13\x38\x63\x4c\x56\x28\xb2\xaf\x8b\x20\x5e\xa6\xeb\x8e\x3e\x8a\x22\x36\x0f\x20\x2a\x5c\xe4\x0d\xf7\xd9\x2e\xb2\x36\x25\xa5\x5a\x2e\x33\xce\x25\xf5\xac\x70\x11\xee\xd3\x23\x60\x41\x10\xf3\xa1\xf3\x5a\xdb\xbc\xbd\xad\x1e\x36\x1d\x73\x6c\xa5\x9b\x77\xdc\x13\xae\x1c\x45\x17\x86\x68\x1f\x50\x3b\x4e\x06\x08\xfb\x90\x25\x3b\xe2\x8c\x77\x83\xc5\x73\x6c\x2d\x0d\xaa\x4a\x99\x32\xad\x84\xf7\x27\xc0\x12\x4a\x0f\xc2\x85\x5b\x3b\xfc\x3c\xe5\xfc\x8a\x75\x31\x09\xa3\xe5\x2e\xa5\x80\x25\x5f\x14\x0c\x8b\x81\x59\xc3\x45\x93\x5e\x95\x2a\x55\x9e\x14\x62\x4b\xb3\xe0\x18\x03\x69\x55\x7a\xb5\xd7\x3e\xb2\xbc\x00\xf5\x40\x28\xdb\xf9\x22\x35\xcc\x22\xa6\x66\xf8\xa8\x58\x1d\xb6\x59\x17\xff\xa3\xcf\x49\x97\xd9\x44\xa5\x88\x8e\xd8\x9a\x01\xd2\x20\xdd\x85\xc3\xaa\xce\x05\xea\x46\xdb\x7b\x27\x8c\xa1\x41\xa0\x09\xb1\x2d\xd4\xd5\x8c\xe0\x8b\x69\x47\x62\x89\xf3\x06\xa6\xe5\xff\x3a\x10\x67\x61\x0e\xa0\xa3\x65\x02\x0b\x88\xf4\x16\xcc\x0e\xd2\x88\x38\xaa\x13\xd8\xf1\x8b\x1c\xdf\x7c\x4a\x32\xe0\x6c\x0f\xd6\x74\x82\x8c\x7b\xeb\xcc\x43\xe4\xb1\x10\x3e\x6d\x63\xa7\x8a\x15\x41\x13\x19\x1e\xe9\x42\xd3\x28\x22\x1e\x40\x62\xd6\x5e\x65\xca\x85\x45\x72\x34\x4e\xad\xdb\x0d\x0c\xd5\xa0\x32\x5c\xcd\xb4\x37\xf7\x02\x16\xde\xd0\x00\xf3\x2a\x7e\x67\x2e\x3d\xb2\x1f\xdc\x8c\x24\x14\xd8\x40\x10\xd2\x87\xa4\x5b\x2b\x43\xa4\x45\x6e\xdc\x27\xc3\xaf\xa0\x13\x9d\x8c\x7c\x19\x89\x10\x29\x71\xf4\x8d\x80\x09\xda\xc9\xe2\xdd\xb5\x1a\xbd\x49\xa3\x6e\xc0\x77\x04\xb0\x22\xc9\x10\x33\xa6\x60\xb5\x05\x50\x06\x73\x20\x1d\x8c\x40\x1b\x90\xf5\x88\x51\xcf\x9b\xb0\x56\x27\xce\x04\x28\xb8\x5a\xc7\x82\xc3\xca\xe6\x24\x38\x73\x74\xde\xd3\x80\xe2\x6e\x72\x0c\x42\x2a\x54\x1e\x15\x59\x23\x08\x90\xb9\x80\xcb\x26\x92\xca\x08\x9a\x45\x56\xcc\x25\x47\xd6\xc0\x45\xba\xa4\x79\xcb\x3b\x75\xc1\x1a\xa6\x20\x84\xf1\x5d\x71\xe4\xc0\x6c\xdf\xa6\xac\xb3\x64\xed\x75\xa0\x3d\x7e\x01\xa8\x33\x87\xfb\x57\x9b\x52\x15\x04\xcf\x04\x29\x3e\x03\x96\x70\x8f\x98\x36\x7a\x56\x8e\x80\xeb\xba\xa6\x17\xd2\x4d\xce\xdb\x94\xe0\x87\xa8\x10\x40\xeb\xad\xc9\x8b\x28\x5c\xca\x66\x61\xe4\xa8\x42\xd9\xb0\x24\x72\x4f\x24\x6c\x50\x6e\xdc\x6a\x61\x9d\x87\x1f\x58\x7c\x08\xb4\xdd\x4b\x48\x9e\x96\xe7\xd4\x5e\x84\x3d\xd2\x8d\xf6\x42\x1b\xf3\x2d\x3a\x5b\x10\xfc\x2a\xe6\xe1\x6c\x66\xcc\xcd\x87\x9d\x68\xd5\x55\xfb\x40\x94\xb5\x40\x66\x2f\x63\xe3\xa3\x8e\x3a\x82\x97\x10\x56\x41\x6a\xa8\x93\xc6\x03\xf3\x13\xa9\x59\xb7\x9b\x25\x88\x13\x5e\xef\xdb\x22\x40\x6b\xeb\x41\x2e\xe0\x69\x15\x5e\xa8\x3b\xd6\x46\x1e\x59\x5a\x8e\x5f\xb8\x79\x26\x16\xbc\xe6\x56\x1e\x79\x07\x1f\x59\x0c\x00\x6b\x28\xd4\xa0\xd5\xb0\xb6\xf9\x01\xb8\xd5\xde\x89\xdc\x11\x9e\x00\x35\xc3\xb0\xa1\x15\xac\xde\x08\x3d\x1c\x5b\x57\x54\x6f\x40\xea\x8e\x44\xd0\xcd\x88\x30\x59\xe0\xb2\xa9\x20\x87\x59\xcb\xe3\xc6\xc8\xa9\x0a\x54\x77\x04\x39\xb1\xb7\x80\x5b\xcf\x7b\xb2\x31\xf9\xb2\x16\xf0\x59\x74\x5f\x9f\xa0\xf3\xb1\xb9\x05\x75\xa8\x58\x12\xc5\x62\xf8\x01\x09\xc0\x9b\x6d\x50\x43\x6d\x0b\xca\x43\xb9\xa3\x22\xae\xd7\x87\x0f\x57\xdb\xa5\x22\x32\x0c\x54\x95\x5b\xd7\xc3\x0b\x8e\xb8\x0a\x95\xc7\x44\x76\x35\x85\x57\x1e\xb5\x7e\xa7\x34\x31\x2d\x6c\x11\xe9\x98\xe6\x5b\x8f\x58\x9a\x8c\x34\xf1\x61\xee\x51\x1b\xe0\xa8\xd9\xeb\xae\x51\xe1\x57\x5d\x04\xf9\xc7\x5d\x38\x81\xff\xda\x26\x44\x54\x85\x39\xee\x39\x7a\xee\x2b\xf8\x01\xff\xd6\x07\xe6\x59\x68\x0a\xa0\x96\x95\xcc\x51\xf1\x94\xf1\xa8\x0e\xa6\xa9\xec\x58\xb8\x77\xe4\xc3\x3c\x16\x8a\xc7\x5d\x0f\x41\xa0\xc2\xa5\x37\x94\xfa\xb2\x47\x6f\x73\xdf\x18\x35\xc9\x68\x51\xd5\x22\xe6\x56\x89\x7c\x88\x3c\x63\x3b\x13\x93\xa8\xa3\x90\x03\xc8\x64\x38\x10\xe6\xda\x8c\x39\x11\x25\xb6\x19\x13\x44\x13\xf0\x01\x5b\x6c\x56\xb3\xa5\x62\x45\x01\x83\x54\x1c\xbb\xeb\x28\x0f\xd2\xeb\x63\xcd\x19\x86\x40\x9e\x94\x49\x80\xa3\xb5\x81\x8b\x2b\xcc\x20\x6b\x22\xdd\x02\x86\x19\x19\x64\xc7\x53\xe9\xaa\x12\x51\x82\xb2\x16\x8a\xd2\x1b\x5a\x3c\x72\x35\x2a\x17\x57\x95\x30\x10\x96\x51\xe2\xa0\x6e\x47\x68\xed\x1a\x13\x16\x88\x17\x05\xd8\xab\x89\x36\x91\x1b\xa0\x67\x4c\x63\x54\xe9\x1a\x35\xa4\x45\x04\x20\x1a\xdb\x9e\x65\x31\x16\x65\x16\x0a\x39\x14\x17\x3c\x0e\x85\x5e\xd9\xf5\x16\x52\x51\x58\x0a\xa4\x8a\xea\x46\xa1\x00\x3b\x46\x5e\x84\x4d\x00\x0a\x42\x3c\x23\xf1\xc5\x32\x30\xd6\x2e\x7d\xb1\x17\x0e\xe1\x0e\x60\xcc\xb2\x98\x19\x59\x78\x0b\x26\x20\xd6\xae\xee\x5a\x60\x84\x65\x4f\xdf\xc1\x3a\x60\x24\x4d\xa3\xfc\x46\x15\x2c\x29\xb9\x5b\x04\xba\x1b\x68\x67\x8a\x2c\x00\x5e\x2d\x03\x5b\x97\x6f\x3a\x8f\x19\xb9\xa3\xb3\x8e\x09\x5a\xc4\xab\xc1\xfb\x7e\x4b\x80\x4a\x95\xcc\x51\x09\x14\x8b\xe9\x09\x5b\x6f\x63\x02\x57\x93\x6c\xcf\x04\xd4\x2d\x78\x11\x85\x63\x58\x0b\x8e\x60\x1e\x61\x8a\x5c\x48\xf6\xd2\xda\x10\x99\x6d\xdb\x83\x45\x9c\x2e\xd5\x55\x4e\xd2\x6c\xad\xec\x37\x0e\xde\x84\x4b\x92\x41\x12\xd5\x76\x54\x20\x90\xe2\x4e\x30\x61\x8f\x17\x27\xc0\x89\xdb\x04\x3a\xdb\xca\x71\x70\x05\xb3\xc5\x7b\xb5\x20\x39\x44\xad\x02\x36\x06\x63\xc7\x34\xd2\x87\xf7\xc7\x79\x23\xf0\xe3\xdf\x7c\x3c\x40\xd8\x2d\x1e\x6c\xfe\x08\x48\xd4\x84\x23\x36\x3b\x92\xc7\x0a\x8b\x54\xc4\x95\x64\x1b\xc8\xd0\xea\xb6\x88\xf1\x75\x45\x5c\x50\xf8\xd6\xbb\xec\xc7\x55\x01\x81\x85\x39\xc1\x50\x16\xb4\x8a\xbc\x5f\x37\xbd\xf9\x42\x21\xa4\x32\x13\xc8\x76\xd9\x06\xb0\x2f\xbe\x4f\x6e\x28\x44\xa2\x08\x6c\x28\xbb\xe2\x7d\x03\xc3\xef\x2c\x94\xf5\x5f\x14\x54\xb0\x67\x8b\xc0\x07\x74\x5f\x4e\xf3\xa9\xdc\xc9\x70\x1d\xe7\xee\x6a\xe1\x31\x8b\x98\xea\x30\xb3\x78\x01\x8f\xf4\xbe\x89\xe6\xfb\x34\x88\x66\x27\x06\xa0\xb8\xec\x06\xc0\xf7\xe9\xcc\x40\x2c\xfb\x61\x96\x77\xea\xfd\x3e\x0d\xbf\xcd\x20\xc8\x35\xf9\x50\xfc\x61\xba\xa8\x90\x99\x51\xc8\x14\x9a\xe5\x87\x69\x22\xa6\xee\x27\x0b\xca\xd8\x66\x3f\x68\xce\xaa\x1f\x64\x18\xac\x81\x8c\x30\xd6\x8f\xb3\xd0\x85\x65\x38\x5f\x3b\x63\xad\xfc\x42\x32\x89\x20\x2f\x05\x4b\xf3\xf5\xc3\x9d\x71\x93\x6e\x3d\x2c\x07\xa2\xee\xad\xfc\x38\x8b\xbc\x37\x03\x24\x0b\x68\xf7\xf1\xe3\x6c\x43\xa6\x14\x8c\x2b\xb2\xf1\x28\x2f\x8e\x45\x3e\x28\x2a\xbe\x50\xd2\xcf\x17\xb6\xe4\x53\x7b\x75\x85\x0f\x10\x3c\x36\xef\x7e\x37\x65\x47\x01\x52\x76\xe3\xa0\xd7\x66\x2f\x9c\x3c\x1b\x8a\xc8\x28\x17\x00\xf1\xe2\x3f\x5a\xa3\xc3\x8d\xd1\x60\x60\x3b\x67\xd3\xee\xf7\x59\xbe\x7a\x23\x07\x17\x14\xee\x2f\x24\x23\x8f\x02\x17\x8a\x04\x14\xf3\x2f\xac\x01\xd2\x59\x2e\x0f\xa2\x20\x7c\xd0\xfd\x8f\x17\x1e\xc2\x3f\xc0\x5f\x5e\x1a\xcb\x11\x50\x4a\xb3\xcb\xc1\x58\xfd\xc5\xa4\x97\x12\x6f\x5d\x00\xde\xfe\x9f\x64\xd2\xc0\x68\x2a\x40\xf1\xe6\xe3\x75\xd3\x4d\xdf\x2a\x9d\x1b\x57\xe9\xa6\x73\x95\xce\xad\xab\x74\xd3\xbb\x4a\xe7\xe6\x55\x3a\x77\xaf\xd2\x4d\xfb\x2a\xdd\xf4\xaf\xd2\x4d\x03\x2b\xdd\x74\xb0\xd2\x4d\x0b\x2b\xdd\xf4\xb0\xd2\x4d\x13\x2b\xdd\x74\xb1\xd2\x4d\x1b\x2b\xdd\xf4\xb1\xd2\x4d\x23\x2b\xdd\x74\xb2\xd2\x4d\x2b\x2b\xdd\xf4\xb2\xd2\x4d\x33\x2b\xdd\x74\xb3\xd2\x4d\x3b\x2b\xdd\xf4\xb3\xd2\xb9\xa1\x95\x8e\x1d\xad\x74\x6e\x69\xa5\x73\x4f\x2b\x9d\x9b\x5a\xe9\xa6\xab\x95\x8e\x6d\xad\x74\xee\x6b\xa5\x73\x63\x2b\x9d\x3b\x5b\xe9\xd8\xda\x4a\xe7\xde\x56\x3a\x37\xb7\xd2\x4d\x77\x2b\x9d\xdb\x5b\xe9\xa6\xbf\x95\xce\x0d\xae\x74\xec\x70\xa5\x73\x8b\x2b\x1d\x7b\x5c\xe9\xdc\xe4\x4a\x37\x5d\xae\x74\x6e\x73\xa5\x73\x9f\x2b\x1d\x1b\x5d\xe9\xa6\xd3\x95\x6e\x5a\x5d\xe9\xdc\xeb\x4a\xe7\x66\x57\x3a\x77\xbb\xd2\xb9\xdd\x95\x8e\xfd\xae\x74\x6e\x78\xa5\x73\xc7\x2b\xdd\xb4\xbc\xd2\x4d\xcf\x2b\xdd\x34\xbd\xd2\xb1\xeb\x95\xce\x6d\xaf\x74\xee\x7b\xa5\x73\xe3\x2b\x1d\x3b\x5f\xe9\xdc\xfa\x4a\xe7\xde\x57\x3a\x37\xbf\xd2\x4d\xf7\x2b\xdd\xb4\xbf\xd2\x4d\xff\x2b\x9d\x1b\x60\xe9\xa6\x03\x96\x8e\x2d\xb0\x74\xd3\x03\x4b\x37\x4d\xb0\x74\xee\x82\xa5\x9b\x36\x58\x3a\xf7\xc1\xd2\xb1\x11\x96\xce\x9d\xb0\x74\x6e\x85\xa5\x9b\x5e\x58\x3a\x37\xc3\xd2\x4d\x37\x2c\x1d\xdb\x61\xe9\xdc\x0f\x4b\xe7\x86\x58\x3a\x76\xc4\xd2\xb9\x25\x96\xce\x3d\xb1\x74\x6e\x8a\xa5\x9b\xae\x58\xba\x69\x8b\xa5\x9b\xbe\x58\x3a\x36\xc6\xd2\xb9\x33\x96\xee\x5a\x63\xdf\x5f\x15\xb0\x56\x8b\x5c\xd9\xf2\xdf\x60\xf1\xd4\x3a\x4b\x37\xbd\xb3\x74\xd3\x3c\x4b\x37\xdd\xb3\x74\xdb\x3e\xfb\x9b\xe7\x36\x9e\x4c\x3d\xc8\xd9\x51\x14\xd8\xa3\x04\x3a\xb4\xd7\xd2\x4d\x7f\x2d\xdd\x34\xd8\xd2\x4d\x87\x2d\x9d\x5b\x6c\xe9\xdc\x63\x4b\xe7\x26\x5b\x3a\x77\xd9\xd2\xb1\xcd\x96\x6e\xfa\x6c\xe9\xdc\x68\x4b\xe7\x4e\x5b\xba\x69\xb5\xa5\x9b\x5e\x5b\x3a\x37\xdb\xd2\xb9\xdb\x96\xce\xed\xb6\x74\xee\xb7\xa5\x9b\x86\x5b\xba\xe9\xb8\xa5\x73\xcb\x2d\xdd\xf4\xdc\xd2\x4d\xd3\x2d\x9d\xbb\x6e\xe9\xa6\xed\x96\xce\x7d\xb7\x74\x6c\xbc\x7d\xfd\xfc\xfc\xf3\x97\x0f\xd7\x9f\xde\x7c\x79\xfe\xf4\xfe\xcd\x87\x57\x9f\xaf\x8f\xef\xde\xbd\x7a\x77\xc1\x11\xed\xc2\x0d\x2e\xbe\x6a\xde\x5d\x80\x0a\x92\xce\x05\x4f\xbf\xbb\x60\x65\x10\x36\x94\xb4\x56\xf0\x09\xe6\x84\x39\x71\xe5\x3e\xf0\x05\xbf\x8d\xcb\xaf\xca\x85\x20\xe4\x79\x95\x0b\x4f\x93\x77\x57\x2b\x57\xc5\xcc\xe2\x6f\xd8\xd1\x20\x1d\xf5\x0e\x04\xaf\x0b\x8a\x83\x67\x71\x55\xec\xe8\x17\xea\x44\xa4\x22\x6e\x47\x08\xb2\x21\x82\xdc\xd1\xf8\x55\xae\x81\x52\x13\x24\xce\x85\x98\x60\x07\x10\x03\x14\xc2\x84\xc9\xb2\x9c\x6a\x69\xad\x73\x33\x02\xdf\xa4\xfb\xbc\xc0\x21\x30\xdf\xc2\x07\x77\xb1\x34\x03\x8e\x8d\xba\x60\x66\xf0\x92\x18\xa1\x20\xa6\x56\xa4\x7e\x2a\xd1\xf5\x0d\x31\x48\xa8\x38\x6e\x0c\x7d\x63\x5b\x96\x26\x23\xd6\x53\x83\x4a\xa9\x83\x07\x3b\xd3\x68\x9e\x52\xa6\xc4\x86\x22\x21\xbc\x8b\xeb\x1b\xe7\xe7\xa6\x63\xa7\xbe\xeb\x45\xaa\xa5\x4e\xdd\x34\xd0\x74\x0a\x94\xea\xbc\x1a\x30\x89\x40\xb4\x4a\x2b\xe4\xb0\x29\x98\x15\xa5\xb8\xdc\x52\xf5\x13\x0b\x26\xe7\x1a\x57\x1b\xeb\xf5\x42\xe5\x90\x8a\xb9\x0d\x6b\xac\x71\xf1\xe4\x66\x7e\x51\x4c\xa5\x4b\xe1\x88\x4a\xad\x40\xa6\xfc\x09\x1f\x6b\xdd\xe2\x56\x63\x4a\x6f\xbc\x03\xea\x34\x2c\xc0\xd0\xa4\x01\x51\xe6\x83\xba\x8d\x2f\x2c\x39\x16\x45\x38\x86\x98\x24\x4c\xb2\x3a\x47\xf0\x93\x08\xe1\xe7\x20\x34\xf0\xb0\x70\x8a\x1a\xfc\x06\xfe\x84\x02\xfe\xc0\x5a\xda\x19\x89\x1f\xa8\x02\x9e\xb0\x93\xaa\x23\x54\x30\x64\x94\xd4\x68\xa6\x3e\x09\x2c\xbc\x19\x3d\x8c\x96\x39\x02\x9c\x77\xb9\x74\xf1\x27\xd6\x2f\x6e\xc5\x51\x78\xd0\x40\xc5\xc9\x43\xf0\x30\x80\x3d\xf0\x54\xed\x2d\x50\x8c\x8b\xc3\xd4\xae\x9b\xc8\x04\xc0\x1f\x77\x8d\x0b\xe1\x8b\x2b\x17\x19\x79\x70\x00\x04\x27\x50\xc2\xde\x30\x1c\x2e\x58\xe4\xa0\x4e\x7c\x02\x16\x14\x61\xc2\x27\x52\x80\x73\x21\xf2\x35\x62\x18\xde\xac\xd4\xb2\x32\x32\x70\xdd\xb1\x51\x5e\xa8\x33\x54\xe7\x42\x1a\x8f\xf7\xab\x57\x6b\x61\x71\x98\x1a\xdf\x38\x86\xe6\xa0\x71\xf1\x9b\x6b\xa6\xbe\xf9\x2f\x96\x5e\x32\x29\xce\xc0\x00\xe2\x4f\x77\x82\x77\xb0\x1d\x3b\x84\x7c\xd4\x11\x18\x40\xd9\xd1\xb9\xaf\x73\x94\x8b\x97\x42\xad\xf2\x4a\xd0\x63\x50\x75\x9d\xd7\xe5\xc8\x49\x75\x5b\x93\x3e\x1c\x93\xd7\x61\x39\xc4\x08\x4c\xb9\x34\x3b\xe9\x13\xf2\x2f\xf2\x78\x5c\x48\x5e\x60\xf4\xf2\x20\xaa\xc6\xf5\x43\x04\x31\x2e\xc6\x41\x25\x4c\x5a\x6c\xc6\x2e\x0d\xb4\x15\xe6\xa5\x2e\x70\x8a\x00\xe3\xfc\x89\x0d\x53\x01\x53\x19\xe3\xac\xe2\xc3\xd3\x8c\x71\x2f\x30\xb1\xc2\xbc\x29\xc6\x19\xbe\x9a\x25\x42\x61\x7a\x2c\xa7\x54\x86\x38\x5f\xa3\x12\xe3\x11\xe2\x08\x0d\x57\xa0\x46\x8c\x03\x34\x3c\x12\xe7\x81\x31\xda\x56\xc7\x18\x14\x88\x9c\x6d\xbf\x25\xb8\x77\x59\x7a\xd2\x00\xf0\xc4\xe2\xf1\x04\x59\x27\x4e\x2b\xe7\x00\x2b\x98\x08\x2b\x34\x47\xbb\x77\x22\x6b\x71\x8e\xc0\x6e\x0c\x0b\x81\x19\xf5\x2b\xc0\x03\x78\xc9\x72\xb0\x3f\x60\x0e\x34\xf7\x19\xb4\x88\x01\xb8\x45\x11\x4a\x67\x75\xb9\x9a\x52\x0a\x3d\x41\x24\x77\x49\x19\xb4\x36\x9c\xa0\x80\xc0\x04\xa6\xcb\xc6\x0f\x03\xe3\xa2\x6a\xfc\x2d\x4d\x80\x91\x29\x19\x8b\x04\x11\xac\x33\xc3\xf4\xdd\x37\x6d\x8d\xd0\x8d\x9e\x11\x4b\xf5\x70\xc6\x1c\x62\x25\xac\x91\x3b\x82\x7f\xc0\x69\x2e\x63\x61\xf5\x1a\x9b\x17\x8b\x18\x8f\xf1\x11\xac\x65\xe1\x7b\x3e\xdc\xc4\x69\x79\x47\x0f\xdb\x55\x22\x4e\x81\x01\xee\xbe\x98\x8d\x26\xbf\x0a\x03\xd0\xe8\xe6\x4c\xe9\xf8\x80\xfe\x6c\xc0\x88\xd7\x2b\xed\x63\x74\xb9\x88\x1c\x26\x2f\x4c\x01\xfc\x7f\x8d\xcc\xc3\x95\xc6\x21\x1e\xdd\x24\x97\x05\x8e\x6d\xf4\x6c\xd9\x84\x53\xc4\xab\xe5\x90\x3e\x38\xc8\x13\x26\xa5\x9a\x50\x57\xc2\x1f\xe4\x3d\xa5\x8e\x1e\x21\x4d\x18\x13\x3e\xc2\x15\x26\x79\x8c\x71\xac\x09\x67\x94\x84\x2f\x5a\x59\x24\xa0\xaf\xc2\x43\x99\x61\xb4\x46\x5f\x50\x05\x38\x36\x65\xd0\xd8\xbf\xf6\x4e\xe1\x55\x5f\x79\xaf\x95\xf2\x52\x7a\xc4\xce\x12\x59\xce\xb6\x54\xca\x89\x80\xf0\x18\x95\x49\x34\xc2\x79\x8e\x70\x26\x4e\xa7\x66\xfa\xf2\x6f\x1a\x52\x6a\x8d\x11\xdd\x52\xbf\x64\x5a\xfb\x36\xb2\xe2\x74\xdd\x3c\x76\xd9\xb6\x93\xce\xd4\x48\xd9\xeb\xea\x43\x1f\x9b\x21\x5d\x2e\xd3\xe9\x6b\x46\x06\x62\x25\x21\x1c\xb3\xb8\x55\x8b\x8d\x14\x21\x96\x72\x65\xa8\x12\x25\x85\xe2\xce\x00\x5f\x14\x57\x17\xdb\x66\x2e\xdc\xb2\x62\xe3\xcb\xd5\x98\xc9\x7b\xa4\x5a\xb2\x02\xbf\xec\x21\x87\xc4\xd1\x34\x7f\x99\xa8\x45\xe7\x50\x83\x4e\xee\x12\xc0\x10\x46\xce\x9b\x32\x43\xaf\x90\x83\x35\x83\x92\x39\x23\x39\xa4\x19\x16\x05\xcc\x31\xca\xa4\x6a\xb8\xb2\xfa\x60\xaa\x91\x2f\xbc\xc4\xbc\x31\x85\x04\xb4\xf8\x68\xd7\xce\x4a\x99\x5a\x93\xb5\x83\xb2\x5c\xec\xec\xa4\x24\xfe\xe9\x89\x29\x5c\x10\x75\xfa\x7d\xe4\x20\xab\x2a\x0d\x69\xc3\x11\xe7\xb9\xec\xec\xd4\x03\x5a\x72\xb7\xab\x28\x70\xe9\xda\xa4\x85\xf7\x58\xd3\xa5\x25\xcf\xf4\x1e\x45\x96\xc5\x3c\x4e\xf0\xb0\x3c\x2d\xce\xfb\x53\x96\xd8\x07\x2b\x63\x07\x65\xa9\x7c\xe3\x1f\x81\x74\x0e\xa9\x52\xbe\xc0\xde\xd0\x92\xbe\x08\xcb\x23\xc3\x68\x9e\xe7\x85\xe5\xd9\xae\xa2\xe5\x59\x6f\xac\xb1\xbd\x83\x02\xf5\x62\x43\xd3\x95\x6d\xf9\xa5\x75\xa4\x0f\x31\x95\xbc\x42\x3b\xd2\xb7\x22\x74\x27\xd5\x30\xfe\x88\x08\xe5\x1d\x78\x36\x90\xc2\xdd\x2d\x6e\x01\x9d\xf9\x07\x35\xf8\xd6\x15\x29\xfc\xd2\xce\x25\x64\x09\x51\x23\x12\x6a\xa3\x0d\x64\x55\x20\x9c\xa3\x5c\xe7\xca\xc1\xae\x92\xca\x95\x00\x5d\xe5\x2a\x7b\x3e\x2a\x5c\x78\x82\x8a\x53\xb6\xa8\x84\x4a\x16\x48\xa2\x37\xa2\x92\xcf\x71\x3c\x8f\x88\x4e\xad\x69\x81\x4a\x8e\x46\xc4\x09\xa3\x35\xe4\x89\xe5\xd8\x93\x89\x62\x86\xbb\x24\x47\xd5\xd5\xd4\xa8\x8b\x69\x9d\x91\x0b\xea\x27\xca\x5d\xa5\x9e\x37\xa6\xab\x11\xa3\xe2\x0d\x7e\x71\xa7\xe4\xcd\xd0\xb9\xe8\x26\xce\x14\xa0\x18\xc4\x23\x0c\xbf\x28\xb5\x3f\x62\x47\x11\x87\x9d\x99\xbb\xfd\x61\x55\xc6\x0d\x47\xb7\x0d\x79\x2f\x9c\x07\xca\xf4\x1a\x76\x6e\x11\x29\x1a\xd5\x2d\x18\xeb\xa8\x35\x18\x75\xe1\x0b\xc5\x0d\x2b\x6d\xd6\xe9\xc2\x8f\xe2\x86\xf5\x20\x0b\x84\xc0\x98\x6c\xd7\x43\xa7\x1a\x3e\x75\x59\x4d\xb6\x5c\xf9\x11\x95\xba\x2d\xa3\x52\xb7\xa8\xc4\x58\x89\x92\xa4\x3d\x7c\xea\x64\x1a\x15\x46\xc2\x18\xbe\x3c\xe6\x39\xaa\x11\x46\xb6\x6b\xa7\xd7\xd8\x35\x75\x72\x8c\xfa\x46\x02\x5b\x1e\xb1\x3b\xb0\x4a\x2b\xd4\x18\xf5\x58\x53\x63\xa7\xe4\x05\x03\xb8\xb4\x84\x76\xb4\x88\xce\x6a\xb2\xba\x2a\xe1\xc0\x0f\x4f\x65\xe6\xe0\x68\x9c\x4e\x5f\x34\x79\x06\x3b\x35\x42\x66\x14\x3a\x19\xd3\xb6\xef\x0e\x26\xda\xbe\x0d\x7f\x15\xed\xc4\x0e\xea\xad\x5b\x34\x65\x55\x93\x4e\x63\xcb\x71\x8b\x9a\xca\xf6\x2d\x28\x23\x8b\xd9\xa0\xad\xe4\x64\xed\xd4\xba\x78\xce\x90\xc3\x50\xb5\xd8\x20\x27\x06\x7a\x67\xf8\x8a\x15\xff\x88\x2c\xc3\x7c\x31\xb7\x5f\xc5\xc6\xe2\xb0\xb9\xfd\x1a\x91\xbb\x7d\xce\xf7\xc6\x10\xf3\x93\xc3\x28\xa3\xe8\x6d\xa5\x11\xdb\xf3\x3c\x4f\xa8\x5b\xa1\xb3\x6c\x20\xee\x8d\x1c\x50\x36\x2f\xac\x6f\xbe\x88\x08\x0f\xac\xca\x7e\xca\x03\x65\x23\x3c\xa2\xc4\x95\x37\x5c\x35\x06\xff\x7a\xa9\x35\x5c\xab\x1a\x59\x72\xc4\x14\xf2\xad\x76\x35\x45\xa4\xa2\x45\xa5\x8b\xb0\x9c\xe9\x45\x65\x12\x69\x68\xc2\xa0\xb2\x8d\xf2\xa9\x72\x0a\xcb\x08\xbe\x79\x84\xcc\xc0\x8e\x6f\x84\x46\xb6\xaa\xf2\xb0\x62\x70\x67\xbd\x16\x1e\x62\xac\xfa\x78\xa0\xc5\x02\x87\x1b\x09\x8c\x73\xf2\x5c\x57\x56\xd3\xc8\x88\x68\x11\x66\x43\xf2\x08\xf6\x17\xbf\x7c\x8b\x4a\xb2\x3f\xd9\x5d\x15\x8c\x6e\x41\xf6\x27\x97\xef\x38\xcd\x31\x4f\xcb\x2a\x2e\xc8\xcb\x64\x7f\xca\xda\xfc\xcc\x7b\x73\x07\x65\xa9\x86\x14\x53\x93\xfd\xc9\x5c\x62\x6c\x61\x87\x32\x7a\xdb\x85\x3c\x19\x40\xf3\xe4\x8f\x19\xd9\x2a\x87\xfd\x88\x91\x78\xc0\xea\x64\xac\x13\x22\xc4\x09\x64\x19\xe6\x49\x31\xc1\xd8\x0c\xe0\xcc\x81\xa3\x3f\xec\x4c\x0f\x32\x73\x12\xa1\x2b\x3f\x6a\x80\x11\xeb\x22\x9b\xeb\x9c\xc1\x75\xd4\x42\xa7\xeb\x1c\x3e\xff\xb8\x56\x36\xe4\x39\xfa\x92\x2d\x25\x19\x67\x30\x03\x53\x7a\xf0\xa1\xed\x93\x07\x11\xb1\x1e\x1c\xc5\x1d\x43\xbc\xa9\x5d\x2b\xe6\x79\x5e\xf0\x21\x6f\xc1\x9c\x43\x1c\x05\x03\x90\x19\xf5\x05\x59\xc1\x63\xd4\x99\x5f\xb4\x65\xd8\x87\xfb\xb5\x53\x7a\x6b\x64\xc5\x97\xd6\x6a\x17\xf5\xd5\x17\xcf\x94\x77\x88\xc3\x69\x5b\x8e\xf4\x59\x0f\x8b\x39\x67\xb5\xab\xc7\xe9\xeb\xfb\x48\xdb\x1a\x72\xc4\x1f\x3a\xf3\xa6\x1c\x89\xcc\xc8\x5f\xba\xbb\x7d\x5b\xb3\xb6\xe5\xcb\xe3\x74\x9e\xbc\xf6\x59\x23\x76\x95\x18\xe5\xba\xef\xf7\x92\x7d\x28\x7d\xbc\xfa\xbf\x00\x00\x00\xff\xff\x59\x87\xfb\x46\x1b\x36\x00\x00")

func baseheadObjBytes() ([]byte, error) {
	return bindataRead(
		_baseheadObj,
		"Basehead.obj",
	)
}

func baseheadObj() (*asset, error) {
	bytes, err := baseheadObjBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Basehead.obj", size: 13851, mode: os.FileMode(438), modTime: time.Unix(1552225649, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"Basehead.obj": baseheadObj,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"Basehead.obj": &bintree{baseheadObj, map[string]*bintree{
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, path.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

